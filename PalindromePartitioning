public class PalindromePartitioning {
    public static int minCut(String s) {
        int n = s.length();
        boolean[][] palindrome = new boolean[n][n];
        int[] cuts = new int[n];

        for (int i = 0; i < n; i++) {
            int minCuts = i; // Maximum cuts could be the length minus 1 (cut each character)
            for (int j = 0; j <= i; j++) {
                if (s.charAt(i) == s.charAt(j) && (i - j <= 1 || palindrome[j + 1][i - 1])) {
                    palindrome[j][i] = true;
                    minCuts = (j == 0) ? 0 : Math.min(minCuts, cuts[j - 1] + 1);
                }
            }
            cuts[i] = minCuts;
        }

        return cuts[n - 1];
    }

    public static void main(String[] args) {
        String s = "aab";
        System.out.println("Minimum cuts needed: " + minCut(s));
    }
}
